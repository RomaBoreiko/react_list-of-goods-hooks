{"version":3,"sources":["Components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","sortBy","setSortBy","filterLength","setFilterLength","goodsCopy","filter","item","length","sort","good1","good2","localeCompare","reverse","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"6LAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,SCPXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuFaC,EApFO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,WAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwCN,mBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAwBIC,EAAS,UAAOX,GAuBpB,OArBIS,EAAe,IACjBE,EAAYA,EAAUC,QAAO,SAACC,GAAD,OAAkBA,EAAKC,QAAUL,MAGhEE,EAAUI,MAAK,SAACC,EAAeC,GAC7B,OAAQV,GACN,IAAK,UACH,OAAOS,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITT,GACFM,EAAUQ,UAIV,sBAAKC,UAAU,MAAf,UACE,wCACEjB,GAEE,wBAAQkB,KAAK,SAASC,QAlDN,WACtBlB,GAAcD,IAiDR,mBAIHA,GAEG,qCACE,wBAAQkB,KAAK,SAASC,QArDP,WACvBhB,GAAeD,IAoDP,qBAGA,wBAAQgB,KAAK,SAASC,QApDL,WACzBd,EAAU,YAmDF,iCAGA,wBAAQa,KAAK,SAASC,QAnDX,WACnBd,EAAU,WAkDF,4BAGA,wBAAQa,KAAK,SAASC,QAlDd,WAChBhB,GAAc,GACdE,EAAU,WACVE,EAAgB,IA+CR,mBAGA,cAAC,EAAD,CACEb,MAAOc,WCzFrBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c3d0c30.chunk.js","sourcesContent":["import React from 'react';\n\nexport type Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good: string) => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './Components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('default');\n  const [filterLength, setFilterLength] = useState(0);\n\n  const toggleListStart = () => {\n    setIsStarted(!isStarted);\n  };\n\n  const makeListReversed = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortAlphabetically = () => {\n    setSortBy('alfabet');\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n  };\n\n  const resetList = () => {\n    setIsReversed(false);\n    setSortBy('default');\n    setFilterLength(0);\n  };\n\n  let goodsCopy = [...goodsFromServer];\n\n  if (filterLength > 0) {\n    goodsCopy = goodsCopy.filter((item: string) => item.length <= filterLength);\n  }\n\n  goodsCopy.sort((good1: string, good2: string) => {\n    switch (sortBy) {\n      case 'alfabet':\n        return good1.localeCompare(good2);\n\n      case 'length':\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!isStarted\n        && (\n          <button type=\"button\" onClick={toggleListStart}>\n            Start\n          </button>\n        )}\n      {isStarted\n        && (\n          <>\n            <button type=\"button\" onClick={makeListReversed}>\n              Reverse\n            </button>\n            <button type=\"button\" onClick={sortAlphabetically}>\n              Sort alphabetically\n            </button>\n            <button type=\"button\" onClick={sortByLength}>\n              Sort by length\n            </button>\n            <button type=\"button\" onClick={resetList}>\n              Reset\n            </button>\n            <GoodsList\n              goods={goodsCopy}\n            />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}